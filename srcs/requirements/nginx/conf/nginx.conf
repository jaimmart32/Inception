server {
    # Configura el servidor para que escuche en el puerto 443 con SSL/TLS habilitado.
    listen 443 ssl;
    # Habilitar escucha para conexiones IPv6
    listen [::]:443 ssl;
    # Define el nombre del servidor (dominio) que NGINX utilizará para esta configuración.
    server_name jaimmart.42.fr www.jaimmart.42.fr;
    # Define el directorio raíz desde donde se servirán los archivos.
    root /var/www/html;
    # Establece el archivo índice predeterminado para las solicitudes de directorios.
    index index.php index.html index.htm index.nginx-debian.html;

    # SSL Settings
    ssl_certificate /etc/ssl/certs/jaimmart.42.fr.crt;
    ssl_certificate_key /etc/ssl/private/jaimmart.42.fr.key;
    ssl_protocols TLSv1.2 TLSv1.3;

    # Location Settings
    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_pass wordpress:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}

# La configuración de NGINX se organiza en bloques de configuración, cada uno de los cuales define diferentes aspectos del servidor.

# FastCGI es un protocolo para la interfaz entre un servidor web y programas externos que genera contenido dinámico. Es una versión 
# mejorada y más rápida del CGI (Common Gateway Interface). FastCGI mantiene procesos en ejecución en lugar de iniciar uno nuevo por 
# cada solicitud, lo cual mejora considerablemente el rendimiento. En el contexto de NGINX y PHP, FastCGI se utiliza para conectar 
# NGINX con un backend PHP-FPM (FastCGI Process Manager), que maneja las solicitudes PHP.

# SSL (Secure Sockets Layer) es un protocolo criptográfico diseñado para proporcionar seguridad en la comunicación a través de redes, 
# como Internet. SSL asegura que los datos transferidos entre un servidor y un cliente (por ejemplo, entre un navegador web y un servidor
# web) se mantengan privados e íntegros. Aunque SSL ha sido reemplazado por TLS (Transport Layer Security) en la mayoría de las aplicaciones 
# modernas, el término "SSL" todavía se utiliza ampliamente para referirse a estos protocolos de seguridad.

# Un certificado SSL es un archivo de datos que vincula una clave criptográfica a los detalles de una organización y su dominio web. Cuando se 
# instala en un servidor web, activa el protocolo HTTPS (HyperText Transfer Protocol Secure), que asegura la comunicación entre el servidor 
# y los navegadores.
